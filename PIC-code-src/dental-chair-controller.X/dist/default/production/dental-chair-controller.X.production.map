Microchip MPLAB XC8 Compiler V2.10 ()

Linker command line:

-W-3 --edf=/opt/microchip/xc8/v2.10/pic/dat/en_msgs.txt -cs \
  -h+dist/default/production/dental-chair-controller.X.production.sym \
  --cmf=dist/default/production/dental-chair-controller.X.production.cmf -z \
  -Q16F819 -o/tmp/xcXafAih5 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/dental-chair-controller.X.production.map -E1 \
  -ver=XC8 --acfsm=1493 -ASTACK=0A0h-0EFh -pstack=STACK -ACODE=00h-07FFh \
  -ASTRCODE=00h-07FFh -ASTRING=00h-0FFhx8 -ACONST=00h-0FFhx8 \
  -AENTRY=00h-0FFhx8 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh \
  -ABANK2=0120h-016Fh -ARAM=020h-06Fh,0A0h-0EFh,0120h-016Fh \
  -AABS1=020h-07Fh,0A0h-0EFh,0120h-016Fh -ASFR0=00h-01Fh -ASFR1=080h-09Fh \
  -ASFR2=0100h-011Fh -ASFR3=0180h-01EFh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k /tmp/xcXsNRbr1.o \
  dist/default/production/dental-chair-controller.X.production.o 

Object code version is 3.11

Machine type is 16F819



                Name                               Link     Load   Length Selector   Space Scale
/tmp/xcXsNRbr1.o
                end_init                              A        A        1        8       0
                reset_vec                             0        0        1        0       0
                config                             2007     2007        1     400E       0
dist/default/production/dental-chair-controller.X.production.o
                cinit                                 B        B       12        8       0
                intentry                              4        4        6        8       0
                text8                               218      218       25        8       0
                text7                                1D       1D       75        8       0
                text6                                F8       F8       66        8       0
                text5                               1BB      1BB       5D        8       0
                text4                               252      252       14        8       0
                text3                               266      266        A        8       0
                text2                                92       92       66        8       0
                text1                               15E      15E       5D        8       0
                maintext                            23D      23D       15        8       0
                cstackBANK0                          28       28        4       20       1
                cstackCOMMON                         76       76        4       70       1
                bssBANK0                             20       20        8       20       1
                bssCOMMON                            70       70        6       70       1

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              A        A        1         0
                cinit                                 B        B       12         0
                intentry                              4        4        6         0
                reset_vec                             0        0        1         0
                text8                               218      218       25         0
                text7                                1D       1D       75         0
                text6                                F8       F8       66         0
                text5                               1BB      1BB       5D         0
                text4                               252      252       14         0
                text3                               266      266        A         0
                text2                                92       92       66         0
                text1                               15E      15E       5D         0
                maintext                            23D      23D       15         0

        CLASS   STRCODE        

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         76       76        4         1
                bssCOMMON                            70       70        6         1

        CLASS   BANK0          
                cstackBANK0                          28       28        4         1
                bssBANK0                             20       20        8         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         0

        CLASS   IDLOC          

        CLASS   EEDATA         

        CLASS   BANK3          



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000001  000001         0       0  CODE        2
                intentry                       000004  00026C  000270         8       0  CODE        2
                bssBANK0                       000020  00000C  00002C        20       1  BANK0       1
                bssCOMMON                      000070  00000A  00007A        70       1  COMMON      1
                config                         002007  000001  002008      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            002C-006F             44           1
        BANK1            00A0-00EF             50           1
        BANK2            0120-016F             50           1
        CODE             0001-0003              3           2
                         0270-07FF            590
        COMMON           007A-007D              4           1
        CONST            0001-0003              3           2
                         0270-07FF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0001-0003              3           2
                         0270-07FF            100
        IDLOC            2000-2003              4           2
        RAM              002C-006F             44           1
                         00A0-00EF             50
                         0120-016F             50
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-011F             20           1
        SFR3             0180-01EF             70           1
        STACK            00A0-00EF             50           1
        STRCODE          0001-0003              3           2
                         0270-07FF            590
        STRING           0001-0003              3           2
                         0270-07FF            100

                                  Symbol Table

CheckFlagStatus@down_button_lock bssBANK0     0026
CheckFlagStatus@ptrflag          cstackCOMMON 0078
CheckFlagStatus@up_button_lock   bssBANK0     0025
DownKeyPress@klock               bssCOMMON    0070
DownKeyPress@ptrflag             cstackCOMMON 0079
DownKeyPress@timerflag           bssBANK0     0027
DownLimitSW@klock                bssBANK0     0024
DownLimitSW@ptrflag              cstackCOMMON 0079
DownLimitSW@timerflag            bssBANK0     0023
UpKeyPress@klock                 bssCOMMON    0072
UpKeyPress@ptrflag               cstackCOMMON 0079
UpKeyPress@timerflag             bssCOMMON    0071
UpLimitSW@klock                  bssBANK0     0022
UpLimitSW@ptrflag                cstackCOMMON 0079
UpLimitSW@timerflag              bssBANK0     0021
_ADCON1bits                      (abs)        009F
_CheckFlagStatus                 text7        001D
_DownKeyPress                    text6        00F8
_DownLimitSW                     text5        01BB
_Global_Inits                    text4        0252
_INTCONbits                      (abs)        000B
_ISR                             text8        0218
_InterruptConfig                 text3        0266
_KlockTimer                      bssBANK0     0020
_KlockTimerDown                  bssCOMMON    0074
_KlockTimerUp                    bssCOMMON    0075
_LimitSwitchTimer                bssCOMMON    0073
_OPTION_REGbits                  (abs)        0081
_OSCCONbits                      (abs)        008F
_PORTAbits                       (abs)        0005
_PORTBbits                       (abs)        0006
_TMR0IE                          (abs)        005D
_TMR0IF                          (abs)        005A
_TRISA2                          (abs)        042A
_TRISA3                          (abs)        042B
_TRISB0                          (abs)        0430
_TRISB1                          (abs)        0431
_TRISB2                          (abs)        0432
_TRISB3                          (abs)        0433
_TRISB5                          (abs)        0435
_UpKeyPress                      text2        0092
_UpLimitSW                       text1        015E
__CFG_BOREN$ON                   (abs)        0000
__CFG_CCPMX$RB2                  (abs)        0000
__CFG_CP$OFF                     (abs)        0000
__CFG_CPD$OFF                    (abs)        0000
__CFG_FOSC$INTOSCIO              (abs)        0000
__CFG_LVP$OFF                    (abs)        0000
__CFG_MCLRE$ON                   (abs)        0000
__CFG_PWRTE$OFF                  (abs)        0000
__CFG_WDTE$ON                    (abs)        0000
__CFG_WRT$OFF                    (abs)        0000
__Habs1                          abs1         0000
__Hbank0                         bank0        0000
__Hbank1                         bank1        0000
__Hbank2                         bank2        0000
__Hbank3                         bank3        0000
__HbssBANK0                      bssBANK0     0000
__HbssCOMMON                     bssCOMMON    0000
__Hcinit                         cinit        001D
__Hclrtext                       clrtext      0000
__Hcode                          code         0000
__Hcommon                        common       0000
__Hconfig                        config       2008
__HcstackBANK0                   cstackBANK0  0000
__HcstackCOMMON                  cstackCOMMON 0000
__Heeprom_data                   eeprom_data  0000
__Hend_init                      end_init     000B
__Hfunctab                       functab      0000
__Hidloc                         idloc        0000
__Hinit                          init         000A
__Hintentry                      intentry     000A
__Hmaintext                      maintext     0000
__Hpowerup                       powerup      0000
__Hram                           ram          0000
__Hreset_vec                     reset_vec    0001
__Hsfr0                          sfr0         0000
__Hsfr1                          sfr1         0000
__Hsfr2                          sfr2         0000
__Hsfr3                          sfr3         0000
__Hspace_0                       (abs)        2008
__Hspace_1                       (abs)        007A
__Hspace_2                       (abs)        0000
__Hspace_3                       (abs)        0000
__Hstack                         stack        0000
__Hstrings                       strings      0000
__Htext                          text         0000
__Labs1                          abs1         0000
__Lbank0                         bank0        0000
__Lbank1                         bank1        0000
__Lbank2                         bank2        0000
__Lbank3                         bank3        0000
__LbssBANK0                      bssBANK0     0000
__LbssCOMMON                     bssCOMMON    0000
__Lcinit                         cinit        000B
__Lclrtext                       clrtext      0000
__Lcode                          code         0000
__Lcommon                        common       0000
__Lconfig                        config       2007
__LcstackBANK0                   cstackBANK0  0000
__LcstackCOMMON                  cstackCOMMON 0000
__Leeprom_data                   eeprom_data  0000
__Lend_init                      end_init     000A
__Lfunctab                       functab      0000
__Lidloc                         idloc        0000
__Linit                          init         000A
__Lintentry                      intentry     0004
__Lmaintext                      maintext     0000
__Lpowerup                       powerup      0000
__Lram                           ram          0000
__Lreset_vec                     reset_vec    0000
__Lsfr0                          sfr0         0000
__Lsfr1                          sfr1         0000
__Lsfr2                          sfr2         0000
__Lsfr3                          sfr3         0000
__Lspace_0                       (abs)        0000
__Lspace_1                       (abs)        0000
__Lspace_2                       (abs)        0000
__Lspace_3                       (abs)        0000
__Lstack                         stack        0000
__Lstrings                       strings      0000
__Ltext                          text         0000
__S0                             (abs)        2008
__S1                             (abs)        007A
__S2                             (abs)        0000
__S3                             (abs)        0000
___int_sp                        stack        0000
___latbits                       (abs)        0000
___sp                            stack        0000
___stackhi                       (abs)        0000
___stacklo                       (abs)        0000
__end_of_CheckFlagStatus         text7        0092
__end_of_DownKeyPress            text6        015E
__end_of_DownLimitSW             text5        0218
__end_of_Global_Inits            text4        0266
__end_of_ISR                     text8        023D
__end_of_InterruptConfig         text3        0270
__end_of_UpKeyPress              text2        00F8
__end_of_UpLimitSW               text1        01BB
__end_of__initialization         cinit        001B
__end_of_main                    maintext     0252
__initialization                 cinit        000B
__pbssBANK0                      bssBANK0     0020
__pbssCOMMON                     bssCOMMON    0070
__pcstackBANK0                   cstackBANK0  0028
__pcstackCOMMON                  cstackCOMMON 0076
__pintentry                      intentry     0004
__pmaintext                      maintext     023D
__ptext1                         text1        015E
__ptext2                         text2        0092
__ptext3                         text3        0266
__ptext4                         text4        0252
__ptext5                         text5        01BB
__ptext6                         text6        00F8
__ptext7                         text7        001D
__ptext8                         text8        0218
__size_of_CheckFlagStatus        (abs)        0000
__size_of_DownKeyPress           (abs)        0000
__size_of_DownLimitSW            (abs)        0000
__size_of_Global_Inits           (abs)        0000
__size_of_ISR                    (abs)        0000
__size_of_InterruptConfig        (abs)        0000
__size_of_UpKeyPress             (abs)        0000
__size_of_UpLimitSW              (abs)        0000
__size_of_main                   (abs)        0000
_main                            maintext     023D
btemp                            (abs)        007E
end_of_initialization            cinit        001B
interrupt_function               intentry     0004
intlevel0                        functab      0000
intlevel1                        functab      0000
intlevel2                        functab      0000
intlevel3                        functab      0000
intlevel4                        functab      0000
intlevel5                        functab      0000
main@swflag                      cstackBANK0  0028
reset_vec                        reset_vec    0000
saved_w                          (abs)        007E
start                            init         000A
start_initialization             cinit        000B
wtemp0                           (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 16 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  swflag          4    0[BANK0 ] struct .
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels required when called:    2
 This function calls:
		_CheckFlagStatus
		_DownKeyPress
		_DownLimitSW
		_Global_Inits
		_InterruptConfig
		_UpKeyPress
		_UpLimitSW
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _UpLimitSW *****************
 Defined at:
		line 219 in file "chair-controll.c"
 Parameters:    Size  Location     Type
  ptrflag         1    wreg     PTR struct .
		 -> main@swflag(4), 
 Auto vars:     Size  Location     Type
  ptrflag         1    3[COMMON] PTR struct .
		 -> main@swflag(4), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          1       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _UpKeyPress *****************
 Defined at:
		line 25 in file "chair-controll.c"
 Parameters:    Size  Location     Type
  ptrflag         1    wreg     PTR struct .
		 -> main@swflag(4), 
 Auto vars:     Size  Location     Type
  ptrflag         1    3[COMMON] PTR struct .
		 -> main@swflag(4), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          1       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _InterruptConfig *****************
 Defined at:
		line 7 in file "Interrupts.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Global_Inits *****************
 Defined at:
		line 4 in file "Inits.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _DownLimitSW *****************
 Defined at:
		line 167 in file "chair-controll.c"
 Parameters:    Size  Location     Type
  ptrflag         1    wreg     PTR struct .
		 -> main@swflag(4), 
 Auto vars:     Size  Location     Type
  ptrflag         1    3[COMMON] PTR struct .
		 -> main@swflag(4), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          1       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _DownKeyPress *****************
 Defined at:
		line 80 in file "chair-controll.c"
 Parameters:    Size  Location     Type
  ptrflag         1    wreg     PTR struct .
		 -> main@swflag(4), 
 Auto vars:     Size  Location     Type
  ptrflag         1    3[COMMON] PTR struct .
		 -> main@swflag(4), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          1       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _CheckFlagStatus *****************
 Defined at:
		line 134 in file "chair-controll.c"
 Parameters:    Size  Location     Type
  ptrflag         1    wreg     PTR struct .
		 -> main@swflag(4), 
 Auto vars:     Size  Location     Type
  ptrflag         1    2[COMMON] PTR struct .
		 -> main@swflag(4), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 26 in file "Interrupts.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          2       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
chair-controll.c
		_UpKeyPress    		CODE           	0092	0000	103
		_CheckFlagStatus		CODE           	001D	0000	118
		_UpLimitSW     		CODE           	015E	0000	94
		_DownKeyPress  		CODE           	00F8	0000	103
		_DownLimitSW   		CODE           	01BB	0000	94

chair-controll.c estimated size: 512

Inits.c
		_Global_Inits  		CODE           	0252	0000	21

Inits.c estimated size: 21

Interrupts.c
		_ISR           		CODE           	0218	0000	38
		_InterruptConfig		CODE           	0266	0000	11

Interrupts.c estimated size: 49

shared
		__initialization		CODE           	000B	0000	17

shared estimated size: 17

main.c
		_main          		CODE           	023D	0000	22

main.c estimated size: 22

