Version 4.0 HI-TECH Software Intermediate Code
"870 /opt/microchip/xc8/v2.10/pic/include/pic16f819.h
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 870:     struct {
[s S36 :3 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S36 . PS PSA T0SE T0CS INTEDG nRBPU ]
"878
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 878:     struct {
[s S37 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S37 . PS0 PS1 PS2 ]
"869
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 869: typedef union {
[u S35 `S36 1 `S37 1 ]
[n S35 . . . ]
"884
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 884: extern volatile OPTION_REGbits_t OPTION_REGbits __attribute__((address(0x081)));
[v _OPTION_REGbits `VS35 ~T0 @X0 0 e@129 ]
"316
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 316:     struct {
[s S12 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S12 . RBIF INTF TMR0IF RBIE INTE TMR0IE PEIE GIE ]
"315
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 315: typedef union {
[u S11 `S12 1 ]
[n S11 . . ]
"327
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 327: extern volatile INTCONbits_t INTCONbits __attribute__((address(0x00B)));
[v _INTCONbits `VS11 ~T0 @X0 0 e@11 ]
[t ~ __interrupt . k ]
[t T1 __interrupt ]
"1894
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 1894: extern volatile __bit TMR0IE __attribute__((address(0x5D)));
[v _TMR0IE `Vb ~T0 @X0 0 e@93 ]
"1897
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 1897: extern volatile __bit TMR0IF __attribute__((address(0x5A)));
[v _TMR0IF `Vb ~T0 @X0 0 e@90 ]
"54 /opt/microchip/xc8/v2.10/pic/include/pic16f819.h
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"230
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 230: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"292
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 292: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"312
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 312: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"374
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 374: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"419
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 419: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"440
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 440: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"447
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 447: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"454
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 454: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"461
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 461: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"529
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 529: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"536
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 536: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"607
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 607: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"614
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 614: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"684
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 684: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"691
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 691: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"698
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 698: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"705
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 705: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"763
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 763: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"770
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 770: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"866
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 866: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"936
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 936: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"998
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 998: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1060
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 1060: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1105
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 1105: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1126
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 1126: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1160
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 1160: __asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
"1209
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 1209: __asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
"1267
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 1267: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1274
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 1274: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1281
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 1281: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"1450
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 1450: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"1457
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 1457: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"1516
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 1516: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"1523
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 1523: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"1530
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 1530: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"1537
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 1537: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"1544
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 1544: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"1595
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f819.h: 1595: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"12 ./define.h
[p x FOSC = INTOSCIO ]
"13
[p x WDTE = ON ]
"14
[p x PWRTE = OFF ]
"15
[p x MCLRE = ON ]
"16
[p x BOREN = ON ]
"17
[p x LVP = OFF ]
"18
[p x CPD = OFF ]
"19
[p x WRT = OFF ]
"20
[p x CCPMX = RB2 ]
"21
[p x CP = OFF ]
"12 ./Interrupts.h
[; ;./Interrupts.h: 12: volatile unsigned char KlockTimerUp, KlockTimerDown, LimitSwitchTimer;
[v _KlockTimerUp `Vuc ~T0 @X0 1 e ]
[v _KlockTimerDown `Vuc ~T0 @X0 1 e ]
[v _LimitSwitchTimer `Vuc ~T0 @X0 1 e ]
"7 Interrupts.c
[; ;Interrupts.c: 7: void InterruptConfig(void)
[v _InterruptConfig `(v ~T0 @X0 1 ef ]
"8
[; ;Interrupts.c: 8: {
{
[e :U _InterruptConfig ]
[f ]
"10
[; ;Interrupts.c: 10:     OPTION_REGbits.T0CS=0;
[e = . . _OPTION_REGbits 0 3 -> -> 0 `i `uc ]
"11
[; ;Interrupts.c: 11:     OPTION_REGbits.PSA=0;
[e = . . _OPTION_REGbits 0 1 -> -> 0 `i `uc ]
"12
[; ;Interrupts.c: 12:     OPTION_REGbits.PS=0b111;
[e = . . _OPTION_REGbits 0 0 -> -> 7 `i `uc ]
"13
[; ;Interrupts.c: 13:     INTCONbits.TMR0IE=1;
[e = . . _INTCONbits 0 5 -> -> 1 `i `uc ]
"16
[; ;Interrupts.c: 16:     INTCONbits.GIE=1;
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
"17
[; ;Interrupts.c: 17:     INTCONbits.PEIE=1;
[e = . . _INTCONbits 0 6 -> -> 1 `i `uc ]
"20
[; ;Interrupts.c: 20: }
[e :UE 69 ]
}
"22
[; ;Interrupts.c: 22: volatile unsigned char KlockTimer,LimitSwitchTimer;
[v _KlockTimer `Vuc ~T0 @X0 1 e ]
[v _LimitSwitchTimer `Vuc ~T0 @X0 1 e ]
[v $root$_ISR `(v ~T0 @X0 0 e ]
"26
[; ;Interrupts.c: 26: ISR(void)
[v _ISR `(v ~T1 @X0 1 ef ]
"27
[; ;Interrupts.c: 27: {
{
[e :U _ISR ]
[f ]
"35
[; ;Interrupts.c: 35:     if (TMR0IE && TMR0IF)
[e $ ! && _TMR0IE _TMR0IF 71  ]
"36
[; ;Interrupts.c: 36:     {
{
"38
[; ;Interrupts.c: 38:         if(KlockTimerUp)
[e $ ! != -> _KlockTimerUp `i -> 0 `i 72  ]
"39
[; ;Interrupts.c: 39:         {
{
"40
[; ;Interrupts.c: 40:             KlockTimerUp--;
[e -- _KlockTimerUp -> -> 1 `i `Vuc ]
"41
[; ;Interrupts.c: 41:         }
}
[e :U 72 ]
"43
[; ;Interrupts.c: 43:         if(KlockTimerDown)
[e $ ! != -> _KlockTimerDown `i -> 0 `i 73  ]
"44
[; ;Interrupts.c: 44:         {
{
"45
[; ;Interrupts.c: 45:             KlockTimerDown--;
[e -- _KlockTimerDown -> -> 1 `i `Vuc ]
"46
[; ;Interrupts.c: 46:         }
}
[e :U 73 ]
"48
[; ;Interrupts.c: 48:         if(LimitSwitchTimer)
[e $ ! != -> _LimitSwitchTimer `i -> 0 `i 74  ]
"49
[; ;Interrupts.c: 49:         {
{
"50
[; ;Interrupts.c: 50:             LimitSwitchTimer--;
[e -- _LimitSwitchTimer -> -> 1 `i `Vuc ]
"51
[; ;Interrupts.c: 51:         }
}
[e :U 74 ]
"53
[; ;Interrupts.c: 53:      TMR0IF=0;
[e = _TMR0IF -> -> 0 `i `b ]
"55
[; ;Interrupts.c: 55:     }
}
[e :U 71 ]
"56
[; ;Interrupts.c: 56: }
[e :UE 70 ]
}
